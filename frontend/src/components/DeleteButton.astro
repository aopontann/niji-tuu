<button id="unsubscription" class="button">通知解除</button>

<script>
    import { toast } from "bulma-toast";
    import {
        getMessaging,
        getToken,
        deleteToken,
    } from "firebase/messaging";
    import { vapidKey } from "../scripts/main";

    const topicResiterListEle = document.getElementById("topic-register-list") as HTMLElement;

    document.addEventListener("DOMContentLoaded", async () => {
        console.log("DOMContentLoaded delete");
        // 既に購買済みか
        if (Notification.permission !== "granted") {
            console.log("not granted");
            return;
        }
        const messaging = getMessaging();

        try {
            const deleteEle = document.getElementById("unsubscription") as HTMLElement;
            deleteEle.addEventListener("click", async () => {
                console.log("DELETE");
                // ローディング表示
                deleteEle.classList.add("is-loading");

                const currentToken = await getToken(messaging, { vapidKey });

                // FCMトークン削除
                const deleted = await deleteToken(messaging);
                if (!deleted) {
                    window.alert("トークンの削除に失敗しました");
                    // ローディング解除
                    deleteEle.classList.remove("is-loading");
                }
                console.log("deleted");

                const res = await fetch(
                    `${import.meta.env.PUBLIC_BASE_URL}/api/unsubscription`,
                    {
                        method: "POST",
                        cache: "no-cache",
                        headers: {
                            "Content-Type": "application/json",
                            Authorization: `Bearer: ${currentToken}`,
                        },
                    },
                );
                if (!res.ok) {
                    window.alert("トークンの削除に失敗しました");
                    // ローディング解除
                    deleteEle.classList.remove("is-loading");
                } else {
                    while (topicResiterListEle && topicResiterListEle.childElementCount > 1) {
                        topicResiterListEle.removeChild(
                            topicResiterListEle?.firstChild as ChildNode,
                        );
                    }
                }

                // ローディング解除
                deleteEle.classList.remove("is-loading");

                toast({
                    message: "削除成功",
                    type: "is-success",
                    // dismissible: true,
                    pauseOnHover: true,
                    opacity: 5,
                    extraClasses: "mt-6",
                });

                // 設定初期化
                const songEle = document.getElementById("checkbox-song");
                const infoEle = document.getElementById("checkbox-info");
                songEle.checked = false;
                window.localStorage.setItem("checkbox-song", "false");
                infoEle.checked = false;
                window.localStorage.setItem("checkbox-info", "false");
            });
        } catch (error) {
            console.error(error);
            // window.alert("予期しないエラーが発生しました")
        }
    });
</script>
