<button id="delete" class="button">通知解除</button>

<script>
  import { toast } from "bulma-toast";
  import { getMessaging, getToken, deleteToken } from "firebase/messaging";
  import { fcmToken, vapidKey } from "../scripts/main";

  const messaging = getMessaging();
  const deleteEle = document.getElementById("delete") as HTMLElement;
  const topicResiterListEle = document.getElementById("topic-register-list");

  // 通知解除ボタン
  deleteEle.addEventListener("click", async () => {
    console.log("DELETE");
    // ローディング表示
    deleteEle.classList.add("is-loading");

    const currentToken = await getToken(messaging, { vapidKey });

    // FCMトークン削除
    const deleted = await deleteToken(messaging);
    if (!deleted) {
      window.alert("トークンの削除に失敗しました");
      // ローディング解除
      deleteEle.classList.remove("is-loading");
    }
    console.log('deleted')

    const res = await fetch(`${import.meta.env.PUBLIC_BASE_URL}/api/unsubscription`, {
      method: "POST",
      cache: "no-cache",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer: ${currentToken}`,
      }
    });
    if (!res.ok) {
      window.alert("トークンの削除に失敗しました");
      // ローディング解除
      deleteEle.classList.remove("is-loading");
    } else {
      while (topicResiterListEle && topicResiterListEle.childElementCount > 1) {
        topicResiterListEle.removeChild(topicResiterListEle.firstChild as any)
      }
    }

    // ローディング解除
    deleteEle.classList.remove("is-loading");

    toast({
      message: "削除成功",
      type: "is-success",
      // dismissible: true,
      pauseOnHover: true,
      opacity: 5,
      extraClasses: "mt-6"
    });

    // 設定初期化
    const songEle = document.getElementById("checkbox-song") as HTMLElement;
    const infoEle = document.getElementById("checkbox-info") as HTMLElement;
    songEle.checked = false;
    window.localStorage.setItem("checkbox-song", "false")
    infoEle.checked = false;
    window.localStorage.setItem("checkbox-info", "false")
  });
</script>
