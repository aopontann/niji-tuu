<label class="checkbox mb-2">
  <input id="checkbox-info" type="checkbox" />
  当アプリについてのお知らせを受け取る
</label>

<script>
  import { toast } from "bulma-toast";
  import {
    isSupported,
    getMessaging,
    getToken,
  } from "firebase/messaging";
  import { getFCMToken, vapidKey, loadingStatus } from "../scripts/main";

  const $iosModalEle = document.getElementById("ios-modal-js") as HTMLElement;
  const infoEle = document.getElementById("checkbox-info") as HTMLElement;

  document.addEventListener("DOMContentLoaded", async () => {
    console.log("DOMContentLoaded info");
    // 既に購買済みか
    if (Notification.permission !== "granted") {
      console.log("not granted");
      return;
    }

    try {
      const messaging = getMessaging();
      const currentToken = await getToken(messaging, { vapidKey });

      const resInfo = await fetch(
        `${import.meta.env.PUBLIC_BASE_URL}/api/info`,
        {
          method: "GET",
          headers: {
            Authorization: `Bearer: ${currentToken}`,
          },
        },
      );
      if (resInfo.status == 200) {
        const infoData: any = await resInfo.json();
        infoEle.checked = infoData.status;
        window.localStorage.setItem("checkbox-info", infoData.infoData);
      }
    } catch (error) {
      console.error(error);
      window.alert("予期しないエラーが発生しました")
      document.getElementById("modal-loading")?.classList.remove("is-active");
    }
    loadingStatus.info = true;
    if (loadingStatus.song && loadingStatus.info) {
      document.getElementById("modal-loading")?.classList.remove("is-active");
    }
  });

  infoEle.addEventListener("click", async () => {
    if (!(await isSupported())) {
      $iosModalEle.classList.add("is-active");
      return;
    }

    document.getElementById("modal-loading")?.classList.add("is-active");

    const currentToken = await getFCMToken();
    if (currentToken == "") {
      console.log("none");
      return;
    }

    const res = await fetch(`${import.meta.env.PUBLIC_BASE_URL}/api/info`, {
      method: "POST",
      cache: "no-cache",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer: ${currentToken}`,
      },
      body: JSON.stringify({ status: infoEle.checked }), // 本体のデータ型は "Content-Type" ヘッダーと一致させる必要があります
    });

    if (!res.ok) {
      window.alert("登録に失敗しました");
    }

    window.localStorage.setItem("checkbox-info", infoEle.checked);

    document.getElementById("modal-loading")?.classList.remove("is-active");

    toast({
      message: "登録成功",
      type: "is-success",
      pauseOnHover: true,
      opacity: 5,
      extraClasses: "mt-6",
    });
  });
</script>
